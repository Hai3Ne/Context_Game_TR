//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.Game
{

public sealed partial class ItemExchange :  Bright.Config.BeanBase 
{
    public ItemExchange(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Page = _buf.ReadInt();
        Type = _buf.ReadInt();
        Itemid = _buf.ReadInt();
        Original = _buf.ReadLong();
        Target = _buf.ReadLong();
        Day = _buf.ReadInt();
        History = _buf.ReadInt();
        Vip = _buf.ReadInt();
        Coin = _buf.ReadInt();
        Valid = _buf.ReadInt();
        PostInit();
    }

    public static ItemExchange DeserializeItemExchange(ByteBuf _buf)
    {
        return new Game.ItemExchange(_buf);
    }

    /// <summary>
    /// 自增ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 页
    /// </summary>
    public int Page { get; private set; }
    /// <summary>
    /// 类型
    /// </summary>
    public int Type { get; private set; }
    /// <summary>
    /// 物品ID
    /// </summary>
    public int Itemid { get; private set; }
    /// <summary>
    /// 原始数量
    /// </summary>
    public long Original { get; private set; }
    /// <summary>
    /// 目标数量
    /// </summary>
    public long Target { get; private set; }
    /// <summary>
    /// 每天次数
    /// </summary>
    public int Day { get; private set; }
    /// <summary>
    /// 总共次数
    /// </summary>
    public int History { get; private set; }
    /// <summary>
    /// VIP等级
    /// </summary>
    public int Vip { get; private set; }
    /// <summary>
    /// 钻石
    /// </summary>
    public int Coin { get; private set; }
    /// <summary>
    /// 是否有效
    /// </summary>
    public int Valid { get; private set; }

    public const int __ID__ = -1212967214;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Page:" + Page + ","
        + "Type:" + Type + ","
        + "Itemid:" + Itemid + ","
        + "Original:" + Original + ","
        + "Target:" + Target + ","
        + "Day:" + Day + ","
        + "History:" + History + ","
        + "Vip:" + Vip + ","
        + "Coin:" + Coin + ","
        + "Valid:" + Valid + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
